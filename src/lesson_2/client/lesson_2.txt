Здравствуйте!
Что сделано за неделю:
Признаюсь честно, я не гуру в программировании, только учусь, так сказать все с нуля и дается все нелегко, но ничего "Москва тоже не сразу построилась"
И так, что я сделала за прошедшую неделю, если начинать с первого урока:
1. Выполнила первое домашние задание к первому уроку, и сейчас понимаю что все там нужно перечеркнуть и поменять.
Осознание архитиктуры приложения приходит по мере понимания и изучения нового материала, а точнее с теми проблемными моментами с которыми сталкиваюсь
Переделала первое домашнее задание (вариант не окончательный):
1. Ответить на вопросы (письменно):
Как организовать клиент-серверное взаимодействие?

Двухуровневая архитектура. Сервер и клиент обменивается информацией (потоками байтов) через сокет, который открывается в момент первого подключения клиента к серверу.
___________________________________________________________________________________________________
Как и в каком виде передавать файлы?

Передаем содержимое файла на сервер/клиент побайтно черех сокет.
NIO  используем для открытия потока вода-вывода. Получив объект типа Path, открываем файл, вызвав статический метод newInputStrim(),  newOtputStrim(), определленный  в классе Files/
Методы read(), write  для чтения/записи байтов из файла с применением ByteBufаer
___________________________________________________________________________________________________
Как пересылать большие файлы?

Пока это под вопросом. Нужно поробывать написать часть кода  и потом уже при обнаружении ошибок пробывать решать.

Определим на стороне клиента файл по указаному пути доступин  для чтения, опереляем размер файла, получаем канал к файлу
Создаем буфер, в кторый записываем  некоторое количество байтов
Создаем на стороне сервера пустой файл с  заданым размером, указываем параметр: файл доступен  для записи.
Копируем файл из источника по указанному адресату заданным способом(Подготавливаем буфер к записи данных, записываем данные из буфера  в выходной файл)
Удаляем  файл на стороне клиента (для перемещения, для копирования этот пункт пропустим)
При перемещении повторно файла со стороны клиента на сторону сервера, усли файл уже существует на стороне сервера, то
при спрашиваем у сервера сколько байт  у файла есть и продолжает передавать по частям с указанного места.
___________________________________________________________________________________________________
Как пересылать служебные команды?

Пока под вопросом у меня. Думаю на стороне клиента сделать кнопики для копировани, перемещения, удаления.
При выделении файла и нажатии на данные кнопки выполнять данные команды.
На клиентской стороне сделать чтото похожие на Total Commander.
___________________________________________________________________________________________________
Что хранить в базе данных?

Используем УБД

1. Таблица пользователей:
id,  логин, пароль

2.Таблица Данных (Инфо файлов)

id, id клиента, наименование файла,тип файла, размер файла, дата загрузки,

3. Таблица файлов

id, id инфо файла, сам файл

___________________________________________________________________________________________________
Как передавать структуру каталогов/файлов?

Если путь описывает каталог, можно прочитать содержимое этого каталога, использовать статический методы, определееные в классе Files/
Для  этого сначала получить поток ввода из каталога, вызвав метод newDirectoryStream() и передав ему объект типа Path, обозначающий каталог.
Получаем содержимое каталога, перебрав содержимое объекта  типа DirectoryStream. При переборе (цикл for в стиле for each, методом iterator())
каждая запись каталого представлена  экземпляром интерфейса  Path/
Получение списка файлов из дерева каталога с помощью метода walkFileTree()
___________________________________________________________________________________________________
Какую библиотеку использовать для сетевого взаимодействия: java.io, java.nio, Netty?

Испоьзовать  java.nio
про Netty мало что знаю, но не исключено после третьего урока задумаюсь о применении.
___________________________________________________________________________________________________


После второго урока  приступила к выполнению второго задания написать чат с NIO, но что то пошло не так:
–рзобралась с NIO на сервере, по примеру того что разбирали на втором заданиии, а вот клиент вызвал затруднения на этапе авторизации...

Бросила чат, приступила к сетевому храниллищу, а именно к клиенту.
С помощью JavaFX  приступила к написанию  приложения клиента:
Аторизация клиента по логину и паролю. Подключенеи к серверу через кнопку подключиться.
Также отображается  две таблицы:
1. Таблица клиента: имя, тип, размер, дата изменения файла
2. Таблица хранилища: имя, тип, размер, дата изменения файла
Внизу расположены кнопки
Копирование, Перемещение, Удаление, Выход

На данный момент это все что сделала. К сожалению, не хватает времяни...